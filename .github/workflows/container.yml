name: deploy-container

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'react-micro-frontend/container/**'

defaults:
  run:
    working-directory: react-micro-frontend/container

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout from main branch
        uses: actions/checkout@v2
      - name: Initial Cache check
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        run: yarn install
      - name: Build Webpack Distribution
        run: yarn build
        env:
          AWS_CLOUDFRONT_DOMAIN: ${{ secrets.AWS_CLOUDFRONT_DOMAIN }}
      - name: Deploy to S3
        run: aws s3 sync dist s3://${{ secrets.S3_BUCKET_NAME }}/container/latest --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}/container/latest
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ secrets.AWS_REGION }}
#          SOURCE_DIR: "react-micro-frontend/container/dist"
#        uses: jakejarvis/s3-sync-action@master
#        with:
#          args: --acl public-read --follow-symlinks --delete
      # Invalidate Cloudfront (this action)
      - name: Invalidate CloudFront Edge Cache
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
          PATHS: '/container/latest/index.html'
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
